{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Studies\\\\Full Stack Open\\\\FullStackOpenOsa5\\\\bloglist-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport InfoNotification from './components/InfoNotification';\nimport ErrorNotification from './components/ErrorNotification';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  // const [newTitle, setNewTitle] = useState('')\n  // const [newAuthor, setNewAuthor] = useState('')\n  // const [newUrl, setNewUrl] = useState('')\n  const [infoMessage, setInfoMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  const addBlog = blogObject => {\n    // try {\n    // const blogObject = {\n    //   title: newTitle,\n    //   author: newAuthor,\n    //   url: newUrl\n    // }\n    blogFormRef.current.toggleVisibility();\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n    });\n    setInfoMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`);\n    setTimeout(() => {\n      setInfoMessage(null);\n    }, 5000);\n    // } catch (exception) {\n    //   setErrorMessage('invalid input')\n    //   setTimeout(() => {\n    //     setErrorMessage(null)\n    //   }, 5000)\n    // }\n  };\n\n  // const handleTitleChange = (event) => {\n  //   setNewTitle(event.target.value)\n  // }\n\n  // const handleAuthorChange = (event) => {\n  //   setNewAuthor(event.target.value)\n  // }\n\n  // const handleUrlChange = (event) => {\n  //   setNewUrl(event.target.value)\n  // }\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n  const handleLogout = async /*event*/ () => {\n    // try {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(user);\n    setUsername('');\n    setPassword('');\n    // } catch (exception) {\n    //   setErrorMessage('wrong credentials')\n    //   setTimeout(() => {\n    //     setErrorMessage(null)\n    //   }, 5000)\n    // }\n  };\n\n  const addLike = async id => {\n    const blog = blogs.find(b => b.id === id);\n    const changedBlog = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    };\n    console.log('changedBlog:', changedBlog);\n    // console.log('blogs before:', blogs)\n\n    const returnedBlog = await blogService.update(id, changedBlog);\n    setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog));\n    // console.log('blogs after:', blogs)\n    // blogService\n    //   .update(id, changedBlog).then(returnedBlog => {\n    //     setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n    //   })\n  };\n\n  const removeBlog = blog => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\n      blogService.remove(blog.id, blogService.setToken(user.token)).then(() => {\n        setBlogs(blogs.filter(single_blog => single_blog.id !== blog.id));\n      });\n    }\n  };\n  const blogFormRef = useRef();\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"login to application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoNotification, {\n        message: infoMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorNotification, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            name: \"Username\",\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setUsername(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            name: \"Password\",\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setPassword(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-button\",\n          type: \"submit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorNotification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogout,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [user.name, \" logged in\"]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"create new blog\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        createBlog: addBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blog list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), blogs.sort((blog1, blog2) => blog1.likes - blog2.likes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog,\n      addLike: () => addLike(blog.id),\n      removeBlog: removeBlog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BecPSg5vOdy1HqueREj00VPjYGw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Blog","BlogForm","Togglable","InfoNotification","ErrorNotification","blogService","loginService","App","blogs","setBlogs","infoMessage","setInfoMessage","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","addBlog","blogObject","blogFormRef","current","toggleVisibility","create","returnedBlog","concat","title","author","setTimeout","handleLogin","event","preventDefault","login","setItem","stringify","exception","handleLogout","removeItem","addLike","id","blog","find","b","changedBlog","url","likes","console","log","update","map","removeBlog","confirm","remove","filter","single_blog","target","value","name","sort","blog1","blog2"],"sources":["C:/Stuff/Studies/Full Stack Open/FullStackOpenOsa5/bloglist-frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport InfoNotification from './components/InfoNotification'\r\nimport ErrorNotification from './components/ErrorNotification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  // const [newTitle, setNewTitle] = useState('')\r\n  // const [newAuthor, setNewAuthor] = useState('')\r\n  // const [newUrl, setNewUrl] = useState('')\r\n  const [infoMessage, setInfoMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addBlog = (blogObject) => {\r\n    // try {\r\n    // const blogObject = {\r\n    //   title: newTitle,\r\n    //   author: newAuthor,\r\n    //   url: newUrl\r\n    // }\r\n    blogFormRef.current.toggleVisibility()\r\n\r\n    blogService\r\n      .create(blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n      })\r\n\r\n    setInfoMessage(`a new blog ${blogObject.title} by ${blogObject.author} added`)\r\n    setTimeout(() => {\r\n      setInfoMessage(null)\r\n    }, 5000)\r\n    // } catch (exception) {\r\n    //   setErrorMessage('invalid input')\r\n    //   setTimeout(() => {\r\n    //     setErrorMessage(null)\r\n    //   }, 5000)\r\n    // }\r\n  }\r\n\r\n  // const handleTitleChange = (event) => {\r\n  //   setNewTitle(event.target.value)\r\n  // }\r\n\r\n  // const handleAuthorChange = (event) => {\r\n  //   setNewAuthor(event.target.value)\r\n  // }\r\n\r\n  // const handleUrlChange = (event) => {\r\n  //   setNewUrl(event.target.value)\r\n  // }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLogout = async (/*event*/) => {\r\n    // try {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(user)\r\n    setUsername('')\r\n    setPassword('')\r\n    // } catch (exception) {\r\n    //   setErrorMessage('wrong credentials')\r\n    //   setTimeout(() => {\r\n    //     setErrorMessage(null)\r\n    //   }, 5000)\r\n    // }\r\n  }\r\n\r\n  const addLike = async (id) => {\r\n    const blog = blogs.find(b => b.id === id)\r\n    const changedBlog = {\r\n      title: blog.title,\r\n      author: blog.author,\r\n      url: blog.url,\r\n      likes: blog.likes + 1,\r\n      user: blog.user.id,\r\n    }\r\n\r\n    console.log('changedBlog:', changedBlog)\r\n    // console.log('blogs before:', blogs)\r\n\r\n    const returnedBlog = await blogService.update(id, changedBlog)\r\n    setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\r\n    // console.log('blogs after:', blogs)\r\n    // blogService\r\n    //   .update(id, changedBlog).then(returnedBlog => {\r\n    //     setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\r\n    //   })\r\n  }\r\n\r\n  const removeBlog = (blog) => {\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\r\n      blogService\r\n        .remove(blog.id, blogService.setToken(user.token))\r\n        .then(() => {\r\n          setBlogs(blogs.filter(single_blog => single_blog.id !== blog.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>login to application</h2>\r\n\r\n        <InfoNotification message={infoMessage} />\r\n        <ErrorNotification message={errorMessage} />\r\n\r\n        <form onSubmit={handleLogin}>\r\n          <div>\r\n            username\r\n            <input\r\n              id='username'\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            password\r\n            <input\r\n              id='password'\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Password\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n          </div>\r\n          <button id=\"login-button\" type=\"submit\">login</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>blogs</h1>\r\n\r\n      {/* <InfoNotification message={infoMessage} /> */}\r\n      <ErrorNotification message={errorMessage} />\r\n\r\n      <form onSubmit={handleLogout}>\r\n        <div>\r\n          <>{user.name} logged in</>\r\n          <button type=\"submit\">logout</button>\r\n        </div>\r\n      </form>\r\n\r\n      <Togglable buttonLabel='create new blog' ref={blogFormRef}>\r\n        <BlogForm createBlog={addBlog}/>\r\n      </Togglable>\r\n\r\n      <h2>blog list</h2>\r\n      {blogs.sort((blog1, blog2) => blog1.likes - blog2.likes).map(blog =>\r\n        <Blog\r\n          key={blog.id}\r\n          blog={blog}\r\n          addLike={() => addLike(blog.id)}\r\n          removeBlog={removeBlog}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}